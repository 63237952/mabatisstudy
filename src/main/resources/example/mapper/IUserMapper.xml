<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="example.mapper.IUserMapper">

   <!--使用延时加载-->
    <resultMap id="userAccountLazyLoad" type="example.entity.User">
        <id column="id" property="id"></id>
        <result column="username" property="username"></result>
        <result column="address" property="address"></result>
        <result column="sex" property="sex"></result>
        <result column="birthday" property="birthday"></result>
        <collection property="accounts" column="id" select="example.mapper.IAccountMapper.findByUid" ofType="example.entity.Account"></collection>
    </resultMap>
    <select id="findAll" resultMap="userAccountLazyLoad">
        select * from user;
    </select>
    <select id="findById" resultType="example.entity.User" parameterType="int">
        select * from user where id = #{userid};
    </select>

    <insert id="saveUser" parameterType="example.entity.User" >
        /*执行该select语句，会将id值回写到user中*/
        <selectKey keyColumn="id" keyProperty="id" resultType="int">
            select last_insert_id();
        </selectKey>
        insert into USER (address,birthday,sex,username) VALUES (#{address},#{birthday},#{sex},#{username})
    </insert>

    <update id="updateUser" parameterType="example.entity.User" >
        update user set address=#{address} where id = #{id}
    </update>

    <delete id="deleteUser" parameterType="int">

        delete from user where id = #{userid}
    </delete>

    <select id="findByName" parameterType="java.lang.String" resultType="example.entity.User">
        select * from user where username like #{name};
    </select>

   <!--抽取重复的代码-->
    <sql id="defaultSql">
        select * from user
    </sql>
    <!--动态sql，使用标签if，foreach，where等-->
    <select id="findByConditions" resultType="example.entity.User" parameterType="example.entity.User">
        /*引入重复的代码*/
        <include refid="defaultSql"></include>
         <where>
             <if test="username!=null and username!=''">
                 and username=#{username}
             </if>
             <if test="address!=null and address!=''">
                 and address=#{address}
             </if>
         </where>
    </select>

    <select id="findByVo" parameterType="example.entity.vo.QueryVo" resultType="example.entity.User">
        select * from USER
        <where>
            <if test="ids!=null and ids.size()>0">
                <foreach collection="ids" open="id in (" close=")" item="uid" separator="," >
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>

    <!--多表查询-->

    <resultMap id="userMap" type="example.entity.User">
        <id column="id" property="id"></id>
        <result column="username" property="username"></result>
        <result column="address" property="address"></result>
        <result column="sex" property="sex"></result>
        <result column="birthday" property="birthday"></result>
        <!--引入的集合-->
        <collection property="accounts" ofType="example.entity.Account">
            <!--细节，该id属性与上面的id属性重复，会导致结果出现问题，需要给id起一个别名aid-->
            <id column="aid" property="id"></id>
            <result column="uid" property="uid"></result>
            <result column="money" property="money"></result>
        </collection>
    </resultMap>
    <select id="findUserAcount"  resultMap="userMap">
        select u.*,a.id aid,a.money from user u left OUTER JOIN account a ON u.id=a.uid
    </select>


</mapper>